struct TRIAL {
    uint32 trialId;
    ubyte unk;
    ubyte trialType;
    uint32 targetId;
    uint16 goalNum;
    uint16 location;
    uint16 soulsReward;
    ubyte unk;
    ubyte monopolyState;
    uint16 unk;
};

struct REWARD {
    uint32 unk;
    uint16 soulsReq;
    uint16 itemID;
    uint32 unk;
    ubyte claimed;
};

struct WINNER {
    uint32 GuildID;
    uint16 CategoryID;
    uint16 Team;
    ubyte len;
    string GuildName;
};

struct FILE {
    uint16 opcode;
    uint32 ackHandle;
    ubyte isBuffered;
    ubyte unk;
    uint16 packetSize;

    uint32 festaId;
    time_t registrationTime;
    time_t festivalTime;
    time_t totallingTime;
    time_t rewardTime;
    time_t unkTime;
    time_t currentTime;

    ubyte unk;
    ubyte stringLen;
    string festaString;

    uint32 unk;
    uint32 blueSouls;
    uint32 redSouls;

    uint16 numTrials;
    TRIAL trials[numTrials];

    uint16 numRewards;
    REWARD Rewards[numRewards];

    uint16 unk;
    uint32 unk;

    uint16 Winners;
    WINNER CategoryWinners[Winners] <optimize=false>;

    uint16 Winners;
    WINNER DailyWinners[Winners] <optimize=false>;

    local int i;
    for (i = 0; i < 15; i++) {
        uint16 unk;
    }

    uint16 lenMarkup;
    string markup;
} file;