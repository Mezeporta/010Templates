struct SIGIL {
    uint16 Effect1ID;
    uint16 Effect2ID;
    uint16 Effect3ID;
    uint16 Effect1Level;
    uint16 Effect2Level;
    uint16 Effect3Level;
    ubyte Unk;
    ubyte Unk;
    ubyte Unk;
    ubyte Unk;
};

struct EQUIP {
    uint32 UpdateID; // 0 = Insert
    ubyte ItemType;
    ubyte Unk;
    uint16 ItemID;
    uint16 Level;

    local int i <hidden=true>;
    for (i=0; i<3; i++) {
        uint16 Deco;
    }
    for (i=0; i<3; i++) {
        SIGIL Sigil;
    }

    uint16 Unk;
};

struct ITEM {
    uint32 UpdateID; // 0 = Insert
    uint16 ItemID;
    uint16 Quantity;
    uint32 Unk;
};

struct FILE {
    BigEndian();
    uint16 opcode;
    uint32 AckHandle;

    ubyte ItemType;
    ubyte BoxIndex;
    uint16 Length;
    ubyte Unk; // Unused
    ubyte Unk; // Unused
    if (ItemType) {
        EQUIP Equipment[Length] <optimize=false>;
    } else {
        ITEM Items[Length] <optimize=false>;
    }
} file;